<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gioov.oryx.oauth.mapper.ClientMapper">
    <resultMap id="BaseResultMap" type="com.gioov.oryx.oauth.entity.ClientEntity">
        <id column="client_id" property="clientId" jdbcType="VARCHAR"/>
        <result column="client_secret" property="clientSecret" jdbcType="VARCHAR"/>
        <result column="resource_ids" property="resourceIds" jdbcType="VARCHAR"/>
        <result column="scope" property="scope" jdbcType="VARCHAR"/>
        <result column="authorized_grant_types" property="authorizedGrantTypes" jdbcType="VARCHAR"/>
        <result column="web_server_redirect_uri" property="webServerRedirectUri" jdbcType="VARCHAR"/>
        <result column="access_token_validity" property="accessTokenValidity" jdbcType="VARCHAR"/>
        <result column="refresh_token_validity" property="refreshTokenValidity" jdbcType="VARCHAR"/>
        <result column="additional_information" property="additionalInformation" jdbcType="VARCHAR"/>
        <result column="autoapprove" property="autoapprove" jdbcType="VARCHAR"/>

    </resultMap>

    <sql id="TableName">
        `oauth_client_details`
    </sql>

    <sql id="BaseColumnList">
        `client_id`, `client_secret`, `resource_ids`, `scope`, `authorized_grant_types`, `web_server_redirect_uri`, `authorities`, `access_token_validity`, `refresh_token_validity`, `additional_information`, `autoapprove`
    </sql>

    <insert id="insertOne" useGeneratedKeys="true" keyProperty="clientId"
            parameterType="com.gioov.oryx.oauth.entity.ClientEntity">
        insert into
        <include refid="TableName"/>
        (<include refid="BaseColumnList"/>)
        values (#{clientId}, #{clientSecret}, #{resourceIds}, #{scope}, #{authorizedGrantTypes}, #{webServerRedirectUri}, #{authorities}, #{accessTokenValidity}, #{refreshTokenValidity}, #{additionalInformation}, #{autoapprove})
    </insert>

    <update id="updateOne" keyProperty="clientId" parameterType="com.gioov.oryx.oauth.entity.ClientEntity">
        update
        <include refid="TableName"/>
        set `resource_ids` = #{resourceIds}, `scope` = #{scope}, `authorized_grant_types` = #{authorizedGrantTypes}, `web_server_redirect_uri` = #{webServerRedirectUri}, `authorities` = #{authorities}, `access_token_validity` = #{accessTokenValidity}, `refresh_token_validity` = #{refreshTokenValidity}, `additional_information` = #{additionalInformation}, `autoapprove` = #{autoapprove}
        where `client_id`= #{clientId}
    </update>

    <delete id="deleteOne" parameterType="string">
        delete from
        <include refid="TableName"/>
        where `client_id` = #{clientId}
    </delete>

    <delete id="deleteAll">
        delete from
        <include refid="TableName"/>
        where `client_id` in
        (
        <foreach collection="list" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
    </delete>

    <select id="getOne" resultMap="BaseResultMap">
        select
        <include refid="BaseColumnList"/>
        from
        <include refid="TableName"/>
        where `client_id` = #{clientId} limit 1
    </select>

    <select id="pageAll" resultMap="BaseResultMap" parameterType="com.github.pagehelper.Page">
        select
        <include refid="BaseColumnList"/>
        from
        <include refid="TableName"/>
    </select>

</mapper>
